import { useState } from 'react'
import { User, Settings, Share2, Copy, Star, Trophy, Coins, Calendar, Award, Crown, Zap, Target, Shield, Gift, TrendingUp, Users, Clock, CheckCircle } from 'lucide-react'

const Profile = () => {
  const [activeTab, setActiveTab] = useState('overview')
  const [copied, setCopied] = useState(false)

  const user = {
    username: 'GamingPro2024',
    email: 'gamingpro@example.com',
    level: 28,
    xp: 15420,
    points: 45230,
    joinDate: '2024-01-15',
    avatar: '/assets/images/live-match-player-1.png',
    referralCode: 'GAMING2024',
    totalReferrals: 12,
    rank: 15,
    nextLevelXp: 20000,
    currentLevelXp: 15420
  }

  const achievements = [
    { id: 1, name: 'First Steps', description: 'Complete your first offer', icon: <Star size={24} />, earned: true, rarity: 'common' },
    { id: 2, name: 'Point Collector', description: 'Earn 10,000 points', icon: <Coins size={24} />, earned: true, rarity: 'rare' },
    { id: 3, name: 'Social Butterfly', description: 'Refer 5 friends', icon: <Share2 size={24} />, earned: true, rarity: 'epic' },
    { id: 4, name: 'Lucky Spinner', description: 'Win 10 spins', icon: <Trophy size={24} />, earned: false, rarity: 'rare' },
    { id: 5, name: 'Dedicated Player', description: 'Login for 30 days', icon: <Calendar size={24} />, earned: false, rarity: 'epic' },
    { id: 6, name: 'High Roller', description: 'Earn 50,000 points', icon: <Award size={24} />, earned: false, rarity: 'legendary' }
  ]

  const recentActivity = [
    { id: 1, action: 'Earned 500 points', description: 'Completed BitLabs survey', time: '2 hours ago', type: 'earn', amount: '+500' },
    { id: 2, action: 'Redeemed reward', description: 'Steam Gift Card $10', time: '1 day ago', type: 'redeem', amount: '-2,500' },
    { id: 3, action: 'Daily spin', description: 'Won 250 points', time: '1 day ago', type: 'spin', amount: '+250' },
    { id: 4, action: 'Referred friend', description: 'New user joined', time: '3 days ago', type: 'referral', amount: '+1,000' },
    { id: 5, action: 'Level up!', description: 'Reached level 28', time: '5 days ago', type: 'level', amount: 'Level 28' }
  ]

  const copyReferralCode = () => {
    navigator.clipboard.writeText(`https://gamics.com/ref/${user.referralCode}`)
    setCopied(true)
    setTimeout(() => setCopied(false), 2000)
  }

  const tabs = [
    { id: 'overview', name: 'Overview', icon: <User size={20} /> },
    { id: 'achievements', name: 'Achievements', icon: <Trophy size={20} /> },
    { id: 'activity', name: 'Activity', icon: <Calendar size={20} /> },
    { id: 'settings', name: 'Settings', icon: <Settings size={20} /> }
  ]

  const getRarityColor = (rarity) => {
    switch (rarity) {
      case 'common': return '#9CA3AF'
      case 'rare': return '#3B82F6'
      case 'epic': return '#8B5CF6'
      case 'legendary': return '#F59E0B'
      default: return '#9CA3AF'
    }
  }

  const getActivityIcon = (type) => {
    switch (type) {
      case 'earn': return <Coins size={20} className="text-green-400" />
      case 'redeem': return <Gift size={20} className="text-blue-400" />
      case 'spin': return <Zap size={20} className="text-yellow-400" />
      case 'referral': return <Users size={20} className="text-purple-400" />
      case 'level': return <Crown size={20} className="text-orange-400" />
      default: return <Clock size={20} />
    }
  }

  const xpProgress = ((user.currentLevelXp / user.nextLevelXp) * 100).toFixed(1)

  return (
    <div className="profile-page">
      {/* Hero Section with Gradient Background */}
      <div className="profile-hero">
        <div className="hero-background">
          <div className="gradient-overlay"></div>
          <div className="floating-shapes">
            <div className="shape shape-1"></div>
            <div className="shape shape-2"></div>
            <div className="shape shape-3"></div>
            <div className="shape shape-4"></div>
          </div>
        </div>
        
        <div className="container">
          <div className="profile-header">
            <div className="profile-avatar-container">
              <div className="avatar-ring">
                <div className="avatar-ring-inner"></div>
                <img src={user.avatar} alt={user.username} className="profile-avatar" />
                <div className="level-badge">
                  <Crown size={16} />
                  <span>Lv.{user.level}</span>
                </div>
                <div className="online-indicator"></div>
              </div>
            </div>
            
            <div className="profile-info">
              <div className="username-section">
                <h1 className="username">{user.username}</h1>
                <div className="rank-badge">
                  <Trophy size={16} />
                  <span>Rank #{user.rank}</span>
                </div>
              </div>
              
              <p className="user-email">{user.email}</p>
              
              <div className="profile-stats">
                <div className="stat-card">
                  <div className="stat-icon coins">
                    <Coins size={20} />
                  </div>
                  <div className="stat-content">
                    <span className="stat-value">{user.points.toLocaleString()}</span>
                    <span className="stat-label">Points</span>
                  </div>
                </div>
                
                <div className="stat-card">
                  <div className="stat-icon xp">
                    <Star size={20} />
                  </div>
                  <div className="stat-content">
                    <span className="stat-value">{user.xp.toLocaleString()}</span>
                    <span className="stat-label">XP</span>
                  </div>
                </div>
                
                <div className="stat-card">
                  <div className="stat-icon referrals">
                    <Users size={20} />
                  </div>
                  <div className="stat-content">
                    <span className="stat-value">{user.totalReferrals}</span>
                    <span className="stat-label">Referrals</span>
                  </div>
                </div>
              </div>
              
              {/* XP Progress Bar */}
              <div className="xp-progress-container">
                <div className="xp-progress-header">
                  <span className="xp-label">Experience Progress</span>
                  <span className="xp-percentage">{xpProgress}%</span>
                </div>
                <div className="xp-progress-bar">
                  <div 
                    className="xp-progress-fill"
                    style={{ width: `${xpProgress}%` }}
                  ></div>
                </div>
                <div className="xp-progress-text">
                  <span>{user.currentLevelXp.toLocaleString()} / {user.nextLevelXp.toLocaleString()} XP</span>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>

      {/* Navigation Tabs */}
      <div className="profile-tabs-section">
        <div className="container">
          <div className="profile-tabs">
            {tabs.map(tab => (
              <button
                key={tab.id}
                className={`tab-btn ${activeTab === tab.id ? 'active' : ''}`}
                onClick={() => setActiveTab(tab.id)}
              >
                <div className="tab-icon">{tab.icon}</div>
                <span className="tab-text">{tab.name}</span>
                {activeTab === tab.id && <div className="tab-indicator"></div>}
              </button>
            ))}
          </div>
        </div>
      </div>

      {/* Tab Content */}
      <div className="profile-content">
        <div className="container">
          {activeTab === 'overview' && (
            <div className="overview-content">
              <div className="overview-grid">
                <div className="overview-card referral-card">
                  <div className="card-header">
                    <div className="card-icon">
                      <Share2 size={24} />
                    </div>
                    <h3>Referral Program</h3>
                  </div>
                  <p className="card-description">Invite friends and earn bonus points for each successful referral!</p>
                  
                  <div className="referral-section">
                    <label className="referral-label">Your Referral Link</label>
                    <div className="referral-code">
                      <input 
                        type="text" 
                        value={`https://gamics.com/ref/${user.referralCode}`}
                        readOnly
                        className="referral-input"
                      />
                      <button 
                        className={`copy-btn ${copied ? 'copied' : ''}`}
                        onClick={copyReferralCode}
                      >
                        <Copy size={16} />
                        {copied ? 'Copied!' : 'Copy Link'}
                      </button>
                    </div>
                  </div>
                  
                  <div className="referral-stats">
                    <div className="referral-stat">
                      <div className="stat-icon">
                        <Users size={20} />
                      </div>
                      <div className="stat-info">
                        <span className="stat-number">{user.totalReferrals}</span>
                        <span className="stat-label">Friends Referred</span>
                      </div>
                    </div>
                    <div className="referral-stat">
                      <div className="stat-icon">
                        <Coins size={20} />
                      </div>
                      <div className="stat-info">
                        <span className="stat-number">2,500</span>
                        <span className="stat-label">Bonus Points</span>
                      </div>
                    </div>
                  </div>
                </div>

                <div className="overview-card account-card">
                  <div className="card-header">
                    <div className="card-icon">
                      <User size={24} />
                    </div>
                    <h3>Account Information</h3>
                  </div>
                  
                  <div className="account-details">
                    <div className="detail-item">
                      <div className="detail-icon">
                        <Calendar size={16} />
                      </div>
                      <div className="detail-content">
                        <span className="detail-label">Member Since</span>
                        <span className="detail-value">{new Date(user.joinDate).toLocaleDateString()}</span>
                      </div>
                    </div>
                    
                    <div className="detail-item">
                      <div className="detail-icon">
                        <TrendingUp size={16} />
                      </div>
                      <div className="detail-content">
                        <span className="detail-label">Total Points Earned</span>
                        <span className="detail-value">{user.points.toLocaleString()}</span>
                      </div>
                    </div>
                    
                    <div className="detail-item">
                      <div className="detail-icon">
                        <Crown size={16} />
                      </div>
                      <div className="detail-content">
                        <span className="detail-label">Current Level</span>
                        <span className="detail-value">Level {user.level}</span>
                      </div>
                    </div>
                    
                    <div className="detail-item">
                      <div className="detail-icon">
                        <Target size={16} />
                      </div>
                      <div className="detail-content">
                        <span className="detail-label">XP to Next Level</span>
                        <span className="detail-value">{(user.nextLevelXp - user.currentLevelXp).toLocaleString()} XP</span>
                      </div>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          )}

          {activeTab === 'achievements' && (
            <div className="achievements-content">
              <div className="section-header">
                <h2 className="section-title">
                  <Trophy size={28} />
                  Your Achievements
                </h2>
                <p className="section-subtitle">Unlock rewards by completing various challenges</p>
              </div>
              
              <div className="achievements-grid">
                {achievements.map(achievement => (
                  <div 
                    key={achievement.id} 
                    className={`achievement-card ${achievement.earned ? 'earned' : 'locked'}`}
                  >
                    <div className="achievement-icon" style={{ color: getRarityColor(achievement.rarity) }}>
                      {achievement.icon}
                    </div>
                    <div className="achievement-info">
                      <h4 className="achievement-name">{achievement.name}</h4>
                      <p className="achievement-description">{achievement.description}</p>
                      <div className="achievement-rarity" style={{ color: getRarityColor(achievement.rarity) }}>
                        {achievement.rarity.toUpperCase()}
                      </div>
                    </div>
                    <div className="achievement-status">
                      {achievement.earned ? (
                        <div className="earned-badge">
                          <CheckCircle size={24} />
                        </div>
                      ) : (
                        <div className="locked-badge">
                          <Shield size={24} />
                        </div>
                      )}
                    </div>
                  </div>
                ))}
              </div>
            </div>
          )}

          {activeTab === 'activity' && (
            <div className="activity-content">
              <div className="section-header">
                <h2 className="section-title">
                  <Clock size={28} />
                  Recent Activity
                </h2>
                <p className="section-subtitle">Your latest actions and achievements</p>
              </div>
              
              <div className="activity-list">
                {recentActivity.map(activity => (
                  <div key={activity.id} className="activity-item">
                    <div className="activity-icon">
                      {getActivityIcon(activity.type)}
                    </div>
                    <div className="activity-content">
                      <h4 className="activity-action">{activity.action}</h4>
                      <p className="activity-description">{activity.description}</p>
                    </div>
                    <div className="activity-amount">
                      <span className={`amount ${activity.type}`}>{activity.amount}</span>
                    </div>
                    <div className="activity-time">
                      {activity.time}
                    </div>
                  </div>
                ))}
              </div>
            </div>
          )}

          {activeTab === 'settings' && (
            <div className="settings-content">
              <div className="section-header">
                <h2 className="section-title">
                  <Settings size={28} />
                  Account Settings
                </h2>
                <p className="section-subtitle">Manage your account preferences and privacy</p>
              </div>
              
              <div className="settings-form">
                <div className="form-section">
                  <h3 className="form-section-title">Profile Information</h3>
                  <div className="form-group">
                    <label className="form-label">Username</label>
                    <input type="text" value={user.username} readOnly className="form-input" />
                  </div>
                  <div className="form-group">
                    <label className="form-label">Email Address</label>
                    <input type="email" value={user.email} className="form-input" />
                  </div>
                </div>
                
                <div className="form-section">
                  <h3 className="form-section-title">Notification Preferences</h3>
                  <div className="checkbox-group">
                    <label className="checkbox-item">
                      <input type="checkbox" defaultChecked />
                      <span className="checkbox-custom"></span>
                      <div className="checkbox-content">
                        <span className="checkbox-title">Email Notifications</span>
                        <span className="checkbox-description">Receive updates via email</span>
                      </div>
                    </label>
                    <label className="checkbox-item">
                      <input type="checkbox" defaultChecked />
                      <span className="checkbox-custom"></span>
                      <div className="checkbox-content">
                        <span className="checkbox-title">Push Notifications</span>
                        <span className="checkbox-description">Get notified about new offers</span>
                      </div>
                    </label>
                    <label className="checkbox-item">
                      <input type="checkbox" />
                      <span className="checkbox-custom"></span>
                      <div className="checkbox-content">
                        <span className="checkbox-title">Marketing Emails</span>
                        <span className="checkbox-description">Receive promotional content</span>
                      </div>
                    </label>
                  </div>
                </div>
                
                <div className="form-actions">
                  <button className="btn-primary">
                    <CheckCircle size={16} />
                    Save Changes
                  </button>
                  <button className="btn-secondary">Cancel</button>
                </div>
              </div>
            </div>
          )}
        </div>
      </div>
    </div>
  )
}

export default Profile
